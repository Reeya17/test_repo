trigger:
- main

pool:
  name: 'Self-hosted-pool'

steps:
- script: "echo Hello, World!"
  displayName: 'Checking pipeline is able to use SHIR machine'

- task: AzurepowerShell@5
  inputs:
    displayName: 'Create Resource Group and VM'
    azureSubscription: 'azure-devops-svc'
    ScriptType: 'inlineScript'
    Inline: |
      $resourceGroupName = "MyResourceGroup"
      $location = "WestEurope"
      $vmName = "MyLinuxVM"
      $vmSize = "Standard_B1s" # Small size VM
      $image = "UbuntuLTS" # Ubuntu Linux image
      $adminUsername = "azureuser"
      $password = ${env:ADMINPASS}

      New-AzResourceGroup -Name $resourceGroupName -Location $location

      $vnet = New-AzVirtualNetwork -ResourceGroupName $resourceGroupName -Location $location `
          -Name "MyVNet" -AddressPrefix "10.0.0.0/16"
      $subnet = Add-AzVirtualNetworkSubnetConfig -Name "MySubnet" -AddressPrefix "10.0.0.0/24" -VirtualNetwork $vnet
      $vnet | Set-AzVirtualNetwork

      $publicIp = New-AzPublicIpAddress -ResourceGroupName $resourceGroupName -Location $location `
          -Name "MyPublicIP" -AllocationMethod Dynamic

      $nsg = New-AzNetworkSecurityGroup -ResourceGroupName $resourceGroupName -Location $location `
          -Name "MyNSG"

      # Create a Network Interface
      $nic = New-AzNetworkInterface -ResourceGroupName $resourceGroupName -Location $location `
          -Name "MyNIC" -SubnetId $subnet.Id -PublicIpAddressId $publicIp.Id -NetworkSecurityGroupId $nsg.Id

      # Create the Virtual Machine Configuration
      $vmConfig = New-AzVMConfig -VMName $vmName -VMSize $vmSize |
          Set-AzVMOperatingSystem -Linux -ComputerName $vmName -Credential (Get-Credential -UserName $adminUsername -Message "Enter password for the VM") |
          Set-AzVMSourceImage -PublisherName "Canonical" -Offer $image -Skus "18.04-LTS" -Version "latest" |
          Add-AzVMNetworkInterface -Id $nic.Id

      # Create the Virtual Machine
      New-AzVM -ResourceGroupName $resourceGroupName -Location $location -VM $vmConfig
    azurePowerShellVersion: 'LatestVersion'


